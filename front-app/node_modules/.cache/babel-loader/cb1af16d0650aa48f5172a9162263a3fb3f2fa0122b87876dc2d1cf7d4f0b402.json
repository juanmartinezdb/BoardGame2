{"ast":null,"code":"var _jsxFileName = \"/Users/juanmartinez/pruebas/EJERCICIOS_SOL/BOARDGAME_V2/front-app/src/utils/context/CartContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { CART_ADD_EP, CA } from \"../constants/endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    const newTotal = 0;\n    for (item in cart) {\n      newTotal += item.price * item.units;\n    }\n    setTotal(newTotal);\n  }, [cart]);\n  const addToCart = async product => {\n    const response = await fetch(CART_ADD_EP, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: product.name,\n        units: 1\n      })\n    });\n    const data = await response.json();\n    if (!data.error) {\n      setCart([...cart, {\n        ...product,\n        units: 1\n      }]);\n    } else {\n      alert(data.error);\n    }\n  };\n  const removeFromCart = async name => {\n    const response = await fetch(\"http://localhost:5000/cart/remove\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        units: 1\n      })\n    });\n    const data = await response.json();\n    if (!data.error) {\n      setCart(cart.filter(item => item.name !== name || item.units > 1));\n    } else {\n      alert(data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      total,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"d7rM/Gu5Boo36K50NmkeLGTjXc4=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","CART_ADD_EP","CA","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","total","setTotal","newTotal","item","price","units","addToCart","product","response","fetch","method","headers","body","JSON","stringify","name","data","json","error","alert","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/juanmartinez/pruebas/EJERCICIOS_SOL/BOARDGAME_V2/front-app/src/utils/context/CartContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { CART_ADD_EP, CA } from \"../constants/endpoints\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const newTotal = 0;\n    for (item in cart) {\n     newTotal+= (item.price* item.units)   \n    }\n    setTotal(newTotal);\n  }, [cart]);\n\n  const addToCart = async (product) => {\n    const response = await fetch(CART_ADD_EP, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: product.name, units: 1 }),\n    });\n\n    const data = await response.json();\n    if (!data.error) {\n      setCart([...cart, { ...product, units: 1 }]);\n    } else {\n      alert(data.error);\n    }\n  };\n\n  const removeFromCart = async (name) => {\n    const response = await fetch(\"http://localhost:5000/cart/remove\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name, units: 1 }),\n    });\n\n    const data = await response.json();\n    if (!data.error) {\n      setCart(cart.filter((item) => item.name !== name || item.units > 1));\n    } else {\n      alert(data.error);\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, total, addToCart, removeFromCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,EAAE,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,CAAC;IAClB,KAAKC,IAAI,IAAIL,IAAI,EAAE;MAClBI,QAAQ,IAAIC,IAAI,CAACC,KAAK,GAAED,IAAI,CAACE,KAAM;IACpC;IACAJ,QAAQ,CAACC,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,MAAMQ,SAAS,GAAG,MAAOC,OAAO,IAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACnB,WAAW,EAAE;MACxCoB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAER,OAAO,CAACQ,IAAI;QAAEV,KAAK,EAAE;MAAE,CAAC;IACvD,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;MACfnB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGS,OAAO;QAAEF,KAAK,EAAE;MAAE,CAAC,CAAC,CAAC;IAC9C,CAAC,MAAM;MACLc,KAAK,CAACH,IAAI,CAACE,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAME,cAAc,GAAG,MAAOL,IAAI,IAAK;IACrC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI;QAAEV,KAAK,EAAE;MAAE,CAAC;IACzC,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;MACfnB,OAAO,CAACD,IAAI,CAACuB,MAAM,CAAElB,IAAI,IAAKA,IAAI,CAACY,IAAI,KAAKA,IAAI,IAAIZ,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC,CAAC;IACtE,CAAC,MAAM;MACLc,KAAK,CAACH,IAAI,CAACE,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEE,KAAK;MAAEM,SAAS;MAAEc;IAAe,CAAE;IAAAxB,QAAA,EACrEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CA/CWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}