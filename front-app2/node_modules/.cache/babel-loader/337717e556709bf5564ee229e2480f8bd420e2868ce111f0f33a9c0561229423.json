{"ast":null,"code":"var _jsxFileName = \"D:\\\\PRACTICAS\\\\BoardGame2\\\\front-app2\\\\src\\\\components\\\\cart\\\\CartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CartItemCard from \"./CartItemCard\";\nimport Summary from \"./Summary\";\nimport \"../../templates/css/CartPage.css\";\nimport { getCart, removeFromCart, updateCartQuantity, createOrder } from \"../../utils/cartService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PRODUCTS } from \"../../utils/routes\";\nimport { getProducts } from \"../../utils/productService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartPage() {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [showSummary, setShowSummary] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const [orderId, setOrderId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadCart();\n  }, []);\n  async function loadCart() {\n    const data = await getCart();\n    const products = await getProducts();\n    const mergedCart = data.cart.map(item => {\n      const product = products.find(p => p.name === item.name);\n      return {\n        ...item,\n        stock: product.stock\n      };\n    });\n    setCart(mergedCart);\n  }\n  const handleUpdateQuantity = async (name, newQuantity) => {\n    const currentItem = cart.find(item => item.name === name);\n    if (!currentItem) return;\n    const diff = newQuantity - currentItem.units;\n    if (diff === 0) return;\n    const response = await updateCartQuantity(name, diff);\n    if (response.error) {\n      alert(`Error: ${response.error}`);\n    }\n    loadCart();\n  };\n  const handleRemove = async (name, units) => {\n    const response = await removeFromCart(name, units);\n    if (response.error) {\n      alert(`Error: ${response.error}`);\n    } else {\n      alert(response.message);\n      loadCart();\n    }\n  };\n  const handleShowSummary = () => {\n    setShowSummary(true);\n  };\n  const handlePay = async () => {\n    try {\n      const result = await createOrder();\n      if (result.error) {\n        alert(`Error: ${result.error}`);\n      } else {\n        setOrderId(result.order_id);\n        setPaid(true);\n        alert(`Payment successful! Order #${result.order_id}`);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error processing payment\");\n    }\n  };\n  const handleShopAgain = () => {\n    setPaid(false);\n    setOrderId(null);\n    setShowSummary(false);\n    loadCart();\n    navigate(PRODUCTS);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), cart.length == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"cart-items\",\n        children: cart.map(item => /*#__PURE__*/_jsxDEV(CartItemCard, {\n          item: item,\n          onUpdateQuantity: handleUpdateQuantity,\n          onRemove: handleRemove\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-summary\",\n          onClick: handleShowSummary,\n          children: \"Show Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), showSummary && /*#__PURE__*/_jsxDEV(Summary, {\n          cart: cart,\n          onPay: handlePay,\n          paid: paid,\n          orderId: orderId,\n          onShopAgain: handleShopAgain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(CartPage, \"zuPrh3qRYpnpv2DBtwmeMXEiQrs=\", false, function () {\n  return [useNavigate];\n});\n_c = CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useEffect","useState","CartItemCard","Summary","getCart","removeFromCart","updateCartQuantity","createOrder","useNavigate","PRODUCTS","getProducts","jsxDEV","_jsxDEV","CartPage","_s","cart","setCart","showSummary","setShowSummary","paid","setPaid","orderId","setOrderId","navigate","loadCart","data","products","mergedCart","map","item","product","find","p","name","stock","handleUpdateQuantity","newQuantity","currentItem","diff","units","response","error","alert","handleRemove","message","handleShowSummary","handlePay","result","order_id","err","console","handleShopAgain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onUpdateQuantity","onRemove","id","onClick","onPay","onShopAgain","_c","$RefreshReg$"],"sources":["D:/PRACTICAS/BoardGame2/front-app2/src/components/cart/CartPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CartItemCard from \"./CartItemCard\";\r\nimport Summary from \"./Summary\";\r\nimport \"../../templates/css/CartPage.css\";\r\nimport { getCart, removeFromCart, updateCartQuantity, createOrder } from \"../../utils/cartService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PRODUCTS } from \"../../utils/routes\";\r\nimport { getProducts } from \"../../utils/productService\";\r\n\r\n\r\nexport default function CartPage() {\r\n    const [cart, setCart] = useState([]);\r\n    const [showSummary, setShowSummary] = useState(false);\r\n    const [paid, setPaid] = useState(false);\r\n    const [orderId, setOrderId] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        loadCart();\r\n    }, []);\r\n\r\n    async function loadCart() {\r\n        const data = await getCart();\r\n        const products = await getProducts();\r\n        const mergedCart = data.cart.map((item) => {\r\n          const product = products.find((p) => p.name === item.name);\r\n          return {...item,stock: product.stock};\r\n        });\r\n        setCart(mergedCart);\r\n      }\r\n\r\n\r\n    const handleUpdateQuantity = async (name, newQuantity) => {\r\n        const currentItem = cart.find(item => item.name === name);\r\n        if (!currentItem) return;\r\n        \r\n        const diff = newQuantity - currentItem.units;\r\n        if(diff === 0) return; \r\n      \r\n        const response = await updateCartQuantity(name, diff);\r\n        if(response.error) {\r\n          alert(`Error: ${response.error}`);\r\n        }\r\n        loadCart();\r\n      };\r\n\r\n    const handleRemove = async (name, units) => {\r\n        const response = await removeFromCart(name, units);  \r\n        if (response.error) {\r\n          alert(`Error: ${response.error}`);\r\n        } else {\r\n          alert(response.message);\r\n          loadCart();\r\n        }\r\n      };\r\n\r\n    const handleShowSummary = () => {\r\n        setShowSummary(true);\r\n    };\r\n\r\n\r\n    const handlePay = async () => {\r\n        try {\r\n          const result = await createOrder();\r\n          if (result.error) {\r\n            alert(`Error: ${result.error}`);\r\n          } else {\r\n            setOrderId(result.order_id);\r\n            setPaid(true);\r\n            alert(`Payment successful! Order #${result.order_id}`);\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n          alert(\"Error processing payment\");\r\n        }\r\n      };\r\n\r\n    const handleShopAgain = () => {\r\n        setPaid(false);\r\n        setOrderId(null);\r\n        setShowSummary(false);\r\n        loadCart(); \r\n        navigate(PRODUCTS);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-page\">\r\n            <h2>Cart</h2>\r\n            {cart.length == 0 ? (\r\n                <p>Your cart is empty.</p>\r\n            ) : (\r\n                <div className=\"sections\">\r\n                    <section className=\"cart-items\">\r\n                        {cart.map((item) => (\r\n                            <CartItemCard\r\n                                key={item.id}\r\n                                item={item}\r\n                                onUpdateQuantity={handleUpdateQuantity}\r\n                                onRemove={handleRemove}\r\n                            />\r\n                        ))}\r\n                    </section>\r\n                    <section className=\"summary\">\r\n                        \r\n                        <button className=\"btn-summary\" onClick={handleShowSummary}>\r\n                            Show Summary\r\n                        </button>\r\n                        {showSummary && (\r\n                            <Summary\r\n                                cart={cart}\r\n                                onPay={handlePay}\r\n                                paid={paid}\r\n                                orderId={orderId}\r\n                                onShopAgain={handleShopAgain}\r\n                            />\r\n                        )}\r\n                    </section>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,kCAAkC;AACzC,SAASC,OAAO,EAAEC,cAAc,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,yBAAyB;AAClG,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMsB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BR,SAAS,CAAC,MAAM;IACZwB,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,QAAQA,CAAA,EAAG;IACtB,MAAMC,IAAI,GAAG,MAAMrB,OAAO,CAAC,CAAC;IAC5B,MAAMsB,QAAQ,GAAG,MAAMhB,WAAW,CAAC,CAAC;IACpC,MAAMiB,UAAU,GAAGF,IAAI,CAACV,IAAI,CAACa,GAAG,CAAEC,IAAI,IAAK;MACzC,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKJ,IAAI,CAACI,IAAI,CAAC;MAC1D,OAAO;QAAC,GAAGJ,IAAI;QAACK,KAAK,EAAEJ,OAAO,CAACI;MAAK,CAAC;IACvC,CAAC,CAAC;IACFlB,OAAO,CAACW,UAAU,CAAC;EACrB;EAGF,MAAMQ,oBAAoB,GAAG,MAAAA,CAAOF,IAAI,EAAEG,WAAW,KAAK;IACtD,MAAMC,WAAW,GAAGtB,IAAI,CAACgB,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACI,IAAI,KAAKA,IAAI,CAAC;IACzD,IAAI,CAACI,WAAW,EAAE;IAElB,MAAMC,IAAI,GAAGF,WAAW,GAAGC,WAAW,CAACE,KAAK;IAC5C,IAAGD,IAAI,KAAK,CAAC,EAAE;IAEf,MAAME,QAAQ,GAAG,MAAMlC,kBAAkB,CAAC2B,IAAI,EAAEK,IAAI,CAAC;IACrD,IAAGE,QAAQ,CAACC,KAAK,EAAE;MACjBC,KAAK,CAAC,UAAUF,QAAQ,CAACC,KAAK,EAAE,CAAC;IACnC;IACAjB,QAAQ,CAAC,CAAC;EACZ,CAAC;EAEH,MAAMmB,YAAY,GAAG,MAAAA,CAAOV,IAAI,EAAEM,KAAK,KAAK;IACxC,MAAMC,QAAQ,GAAG,MAAMnC,cAAc,CAAC4B,IAAI,EAAEM,KAAK,CAAC;IAClD,IAAIC,QAAQ,CAACC,KAAK,EAAE;MAClBC,KAAK,CAAC,UAAUF,QAAQ,CAACC,KAAK,EAAE,CAAC;IACnC,CAAC,MAAM;MACLC,KAAK,CAACF,QAAQ,CAACI,OAAO,CAAC;MACvBpB,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC;EAEH,MAAMqB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B3B,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAGD,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMxC,WAAW,CAAC,CAAC;MAClC,IAAIwC,MAAM,CAACN,KAAK,EAAE;QAChBC,KAAK,CAAC,UAAUK,MAAM,CAACN,KAAK,EAAE,CAAC;MACjC,CAAC,MAAM;QACLnB,UAAU,CAACyB,MAAM,CAACC,QAAQ,CAAC;QAC3B5B,OAAO,CAAC,IAAI,CAAC;QACbsB,KAAK,CAAC,8BAA8BK,MAAM,CAACC,QAAQ,EAAE,CAAC;MACxD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;MAClBP,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAEH,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC1B/B,OAAO,CAAC,KAAK,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC;IAChBJ,cAAc,CAAC,KAAK,CAAC;IACrBM,QAAQ,CAAC,CAAC;IACVD,QAAQ,CAACd,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIG,OAAA;IAAKwC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBzC,OAAA;MAAAyC,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACZ1C,IAAI,CAAC2C,MAAM,IAAI,CAAC,gBACb9C,OAAA;MAAAyC,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1B7C,OAAA;MAAKwC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBzC,OAAA;QAASwC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAC1BtC,IAAI,CAACa,GAAG,CAAEC,IAAI,iBACXjB,OAAA,CAACV,YAAY;UAET2B,IAAI,EAAEA,IAAK;UACX8B,gBAAgB,EAAExB,oBAAqB;UACvCyB,QAAQ,EAAEjB;QAAa,GAHlBd,IAAI,CAACgC,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIf,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACV7C,OAAA;QAASwC,SAAS,EAAC,SAAS;QAAAC,QAAA,gBAExBzC,OAAA;UAAQwC,SAAS,EAAC,aAAa;UAACU,OAAO,EAAEjB,iBAAkB;UAAAQ,QAAA,EAAC;QAE5D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRxC,WAAW,iBACRL,OAAA,CAACT,OAAO;UACJY,IAAI,EAAEA,IAAK;UACXgD,KAAK,EAAEjB,SAAU;UACjB3B,IAAI,EAAEA,IAAK;UACXE,OAAO,EAAEA,OAAQ;UACjB2C,WAAW,EAAEb;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC3C,EAAA,CA/GuBD,QAAQ;EAAA,QAKXL,WAAW;AAAA;AAAAyD,EAAA,GALRpD,QAAQ;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}